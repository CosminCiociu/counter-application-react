{"ast":null,"code":"var _jsxFileName = \"/home/cosmin/Desktop/counter-app/src/components/counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleReset = () => {\n      const counterReset = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counterReset\n      });\n    };\n\n    this.handleIncrement = counter => {\n      const counterIncrement = [...this.state.counters];\n      counterIncrement[0] = { ...counter\n      };\n      counterIncrement[0].value++;\n      console.log(this.state.counterIncrement[0]); //this.setState({ counters: counterIncrement });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters: counters\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn btn-primary btn-small m-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        onIncrement: this.handleIncrement,\n        onDelete: this.handleDelete,\n        counter: counter\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/home/cosmin/Desktop/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleReset","counterReset","map","c","setState","handleIncrement","counter","counterIncrement","console","log","handleDelete","counterId","filter","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAC,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OADM,EAEN;AAAED,QAAAA,EAAE,EAAC,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAFM,EAGN;AAAED,QAAAA,EAAE,EAAC,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAHM,EAIN;AAAED,QAAAA,EAAE,EAAC,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAJM;AADN,KADqB;;AAAA,SAU7BC,WAV6B,GAUf,MAAK;AACf,YAAMC,YAAY,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,GAApB,CAAyBC,CAAC,IAAG;AAClDA,QAAAA,CAAC,CAACJ,KAAF,GAAU,CAAV;AACA,eAAOI,CAAP;AACC,OAHoB,CAArB;AAKA,WAAKC,QAAL,CAAc;AAAEH,QAAAA;AAAF,OAAd;AACH,KAjB4B;;AAAA,SAmB7BI,eAnB6B,GAmBXC,OAAO,IAAI;AACzB,YAAMC,gBAAgB,GAAG,CAAC,GAAG,KAAKX,KAAL,CAAWC,QAAf,CAAzB;AACAU,MAAAA,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,EAAC,GAAGD;AAAJ,OAAtB;AACAC,MAAAA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBR,KAApB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWW,gBAAX,CAA4B,CAA5B,CAAZ,EAJyB,CAKzB;AACH,KAzB4B;;AAAA,SA0B7BG,YA1B6B,GA0BbC,SAAD,IAAe;AAC1B,YAAMd,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBe,MAApB,CAA4BT,CAAC,IAAIA,CAAC,CAACL,EAAF,KAASa,SAA1C,CAAjB;AACA,WAAKP,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACH,KA7B4B;AAAA;;AA+B7BgB,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAK,KAAKb,WAAzB;AAAuC,QAAA,SAAS,EAAC,+BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEM,KAAKJ,KAAL,CAAWC,QAAX,CAAoBK,GAApB,CACEI,OAAO,iBACP,QAAC,OAAD;AAEA,QAAA,WAAW,EAAI,KAAKD,eAFpB;AAGA,QAAA,QAAQ,EAAG,KAAKK,YAHhB;AAIA,QAAA,OAAO,EAAIJ;AAJX,SACKA,OAAO,CAACR,EADb;AAAA;AAAA;AAAA;AAAA,cAFF,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAaH;;AA7C4B;;AAgDjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Counter from './counter';\n\nclass Counters extends Component {\n    state = { \n        counters: [\n            { id:1, value: 4, },\n            { id:2, value: 0, },\n            { id:3, value: 0, },\n            { id:4, value: 0, }\n        ]\n     };\n\n    handleReset = () =>{\n        const counterReset = this.state.counters.map( c =>{\n        c.value = 0;\n        return c;\n        });\n\n        this.setState({ counterReset })\n    }\n\n    handleIncrement = counter => {\n        const counterIncrement = [...this.state.counters];\n        counterIncrement[0] = {...counter};\n        counterIncrement[0].value++;\n        console.log(this.state.counterIncrement[0]);\n        //this.setState({ counters: counterIncrement });\n    }\n    handleDelete = (counterId) => {\n        const counters = this.state.counters.filter( c => c.id !== counterId);\n        this.setState({ counters: counters });\n    }\n\n    render() { \n        return ( \n        <div>\n            <button onClick = { this.handleReset } className=\"btn btn-primary btn-small m-2\">Reset</button>\n            { this.state.counters.map(\n                counter => \n                <Counter \n                key={counter.id} \n                onIncrement= { this.handleIncrement }\n                onDelete={ this.handleDelete } \n                counter = {counter}>\n                </Counter>\n            )}\n        </div> );\n    }\n}\n \nexport default Counters;"]},"metadata":{},"sourceType":"module"}